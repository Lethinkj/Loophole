name: Daily Auto Commit

on:
  schedule:
    # Runs daily at 12:00 UTC (you can change this time)
    - cron: '0 12 * * *'
  workflow_dispatch: # Allows manual triggering

jobs:
  auto-commit:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        fetch-depth: 0
    
    - name: Setup Git
      run: |
        git config --local user.email "41898282+github-actions[bot]@users.noreply.github.com"
        git config --local user.name "github-actions[bot]"
    
    - name: Update loop file
      run: |
        # Read the current content and find the maximum dots
        if [ ! -f "loop" ]; then
          echo "Loop file not found!"
          exit 1
        fi
        
        echo "Current loop file content:"
        cat loop
        echo "---"
        
        # Find the line with the most dots
        max_dots=0
        while IFS= read -r line; do
          # Remove any carriage return characters
          line=$(echo "$line" | tr -d '\r')
          if [[ "$line" =~ ^\.+$ ]]; then
            dot_count=${#line}
            echo "Found dot line: '$line' with $dot_count dots"
            if [ $dot_count -gt $max_dots ]; then
              max_dots=$dot_count
            fi
          fi
        done < loop
        
        echo "Maximum dots found: $max_dots"
        
        # Create new line with one more dot
        new_dots=$((max_dots + 1))
        new_line=$(printf "%*s" $new_dots | tr ' ' '.')
        
        echo "Adding new line: '$new_line' with $new_dots dots"
        
        # Add the new line to the file
        echo "$new_line" >> loop
        
        echo "Updated loop file content:"
        cat loop
    
    - name: Commit and push changes
      run: |
        git add loop
        
        # Check if there are changes to commit
        if git diff --staged --quiet; then
          echo "No changes to commit"
          exit 0
        fi
        
        # Show what we're about to commit
        echo "Changes to be committed:"
        git diff --staged
        
        # Get current date for commit message
        current_date=$(date +"%Y-%m-%d")
        
        # Get the number of dots in the new line we just added
        new_line=$(tail -n 1 loop)
        new_dots=${#new_line}
        
        commit_message="Daily update: Added $new_line on $current_date"
        echo "Commit message: $commit_message"
        
        git commit -m "$commit_message"
        git push