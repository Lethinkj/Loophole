name: Auto Commit Every 5 Minutes

on:
  schedule:
    # Run every 5 minutes - GitHub Actions minimum is 5 minutes
    - cron: '0,5,10,15,20,25,30,35,40,45,50,55 * * * *'
  workflow_dispatch: # Allow manual trigger
  push:
    branches: [ main ]  # Also trigger on any push to test immediately

permissions:
  contents: write
  actions: read

jobs:
  auto-commit:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        fetch-depth: 0

    - name: Configure Git
      run: |
        git config --local user.email "action@github.com"
        git config --local user.name "GitHub Action Auto Commit"

    - name: Check current state and perform action
      run: |
        # Create state file if it doesn't exist
        if [ ! -f commit-state.json ]; then
          echo '{"shouldAdd": true, "commitCount": 0}' > commit-state.json
        fi
        
        # Read current state
        SHOULD_ADD=$(cat commit-state.json | grep -o '"shouldAdd":[^,}]*' | cut -d':' -f2 | tr -d ' ')
        COMMIT_COUNT=$(cat commit-state.json | grep -o '"commitCount":[^,}]*' | cut -d':' -f2 | tr -d ' ')
        
        # Ensure loop file exists
        if [ ! -f loop ]; then
          echo "Initial line" > loop
        fi
        
        # Perform action based on state
        if [ "$SHOULD_ADD" = "true" ]; then
          # Add 5 lines
          TIMESTAMP=$(date -u +"%Y-%m-%dT%H:%M:%S.%3NZ")
          echo "Line added at $TIMESTAMP" >> loop
          echo "Random data: $RANDOM" >> loop
          echo "Commit cycle: adding lines" >> loop
          echo "GitHub Action run: $GITHUB_RUN_NUMBER" >> loop
          echo "Memory info: $(free -h | grep Mem | awk '{print $3}')" >> loop
          
          ACTION="Added 5 lines"
          NEW_SHOULD_ADD="false"
        else
          # Remove 4 lines (but keep at least 1 line)
          LINE_COUNT=$(wc -l < loop)
          if [ $LINE_COUNT -gt 4 ]; then
            head -n -4 loop > loop.tmp && mv loop.tmp loop
            LINES_REMOVED=4
          elif [ $LINE_COUNT -gt 1 ]; then
            LINES_TO_REMOVE=$((LINE_COUNT - 1))
            head -n -$LINES_TO_REMOVE loop > loop.tmp && mv loop.tmp loop
            LINES_REMOVED=$LINES_TO_REMOVE
          else
            LINES_REMOVED=0
          fi
          
          ACTION="Removed $LINES_REMOVED lines"
          NEW_SHOULD_ADD="true"
        fi
        
        # Update state
        NEW_COMMIT_COUNT=$((COMMIT_COUNT + 1))
        echo "{\"shouldAdd\": $NEW_SHOULD_ADD, \"commitCount\": $NEW_COMMIT_COUNT}" > commit-state.json
        
        # Update timestamp file
        echo "Last auto commit: $(date -u +"%Y-%m-%dT%H:%M:%S.%3NZ")" > last-auto-commit.txt
        
        # Set environment variables for commit
        echo "ACTION=$ACTION" >> $GITHUB_ENV
        echo "COMMIT_COUNT=$NEW_COMMIT_COUNT" >> $GITHUB_ENV

    - name: Commit and push changes
      run: |
        git add .
        
        if [ -n "$(git status --porcelain)" ]; then
          COMMIT_MESSAGE="Auto commit - $ACTION - $(date '+%m/%d/%Y, %I:%M:%S %p') UTC"
          git commit -m "$COMMIT_MESSAGE"
          git push
          echo "âœ… Committed and pushed: $COMMIT_MESSAGE"
          echo "ðŸ“Š Total commits so far: $COMMIT_COUNT"
        else
          echo "No changes to commit"
        fi
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
