name: Auto Commit Every Hour

on:
  schedule:
    # Run every hour at minute 0
    - cron: '0 * * * *'
  workflow_dispatch: # Allow manual trigger

permissions:
  contents: write
  actions: read

jobs:
  auto-commit:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        token: ${{ secrets.PAT_TOKEN || secrets.GITHUB_TOKEN }}
        fetch-depth: 0

    - name: Configure Git
      run: |
        git config --local user.email "kjlethin24@gmail.com"
        git config --local user.name "Lethinkj"

    - name: Check current state and perform action
      run: |
        # Create state file if it doesn't exist
        if [ ! -f commit-state-1h.json ]; then
          echo '{"shouldAdd": true, "commitCount": 0}' > commit-state-1h.json
        fi
        
        # Read current state using simpler approach
        if grep -q '"shouldAdd": true' commit-state-1h.json; then
          SHOULD_ADD=true
        else
          SHOULD_ADD=false
        fi
        
        COMMIT_COUNT=$(grep -o '"commitCount": [0-9]*' commit-state-1h.json | grep -o '[0-9]*' || echo 0)
        
        # Ensure loop file exists
        if [ ! -f loop ]; then
          echo "Initial line" > loop
        fi
        
        # Perform action based on state
        if [ "$SHOULD_ADD" = "true" ]; then
          # Add 5 lines
          TIMESTAMP=$(date -u +"%Y-%m-%dT%H:%M:%S.%3NZ")
          echo "1H Line added at $TIMESTAMP" >> loop
          echo "1H Random data: $RANDOM$RANDOM" >> loop
          echo "1H Commit cycle: adding lines" >> loop
          echo "1H GitHub Action run: $GITHUB_RUN_NUMBER.$GITHUB_RUN_ATTEMPT" >> loop
          echo "1H Workflow: scheduled every hour" >> loop
          
          ACTION="Added 5 lines"
          NEW_SHOULD_ADD="false"
        else
          # Remove 4 lines (but keep at least 1 line)
          LINE_COUNT=$(wc -l < loop)
          if [ $LINE_COUNT -gt 4 ]; then
            head -n -4 loop > loop.tmp && mv loop.tmp loop
            LINES_REMOVED=4
          elif [ $LINE_COUNT -gt 1 ]; then
            LINES_TO_REMOVE=$((LINE_COUNT - 1))
            head -n -$LINES_TO_REMOVE loop > loop.tmp && mv loop.tmp loop
            LINES_REMOVED=$LINES_TO_REMOVE
          else
            LINES_REMOVED=0
          fi
          
          ACTION="Removed $LINES_REMOVED lines"
          NEW_SHOULD_ADD="true"
        fi
        
        # Update state
        NEW_COMMIT_COUNT=$((COMMIT_COUNT + 1))
        echo "{\"shouldAdd\": $NEW_SHOULD_ADD, \"commitCount\": $NEW_COMMIT_COUNT}" > commit-state-1h.json
        
        # Update timestamp file
        echo "Last 1H auto commit: $(date -u +"%Y-%m-%dT%H:%M:%S.%3NZ")" > last-auto-commit-1h.txt
        
        # Set environment variables for commit
        echo "ACTION=$ACTION" >> $GITHUB_ENV
        echo "COMMIT_COUNT=$NEW_COMMIT_COUNT" >> $GITHUB_ENV

    - name: Commit and push changes
      run: |
        git add .
        
        if [ -n "$(git status --porcelain)" ]; then
          COMMIT_MESSAGE="Auto commit 1H #$COMMIT_COUNT - $ACTION - $(date '+%m/%d/%Y, %I:%M:%S %p') UTC"
          git commit -m "$COMMIT_MESSAGE"
          git push
          echo "âœ… Committed and pushed: $COMMIT_MESSAGE"
          echo "ðŸ“Š Total 1H commits so far: $COMMIT_COUNT"
        else
          echo "No changes to commit"
        fi
      env:
        GITHUB_TOKEN: ${{ secrets.PAT_TOKEN || secrets.GITHUB_TOKEN }}
